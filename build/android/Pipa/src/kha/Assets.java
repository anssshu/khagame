// Generated by Haxe 3.4.2
package kha;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Assets extends haxe.lang.HxObject
{
	static
	{
		//line 50 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.Assets.images = new kha._Assets.ImageList();
		//line 51 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.Assets.sounds = new kha._Assets.SoundList();
		//line 52 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.Assets.blobs = new kha._Assets.BlobList();
		//line 53 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.Assets.fonts = new kha._Assets.FontList();
		//line 54 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.Assets.videos = new kha._Assets.VideoList();
	}
	
	public Assets(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Assets()
	{
		//line 49 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.Assets.__hx_ctor_kha_Assets(this);
	}
	
	
	public static void __hx_ctor_kha_Assets(kha.Assets __hx_this)
	{
	}
	
	
	public static kha._Assets.ImageList images;
	
	public static kha._Assets.SoundList sounds;
	
	public static kha._Assets.BlobList blobs;
	
	public static kha._Assets.FontList fonts;
	
	public static kha._Assets.VideoList videos;
	
	public static double progress;
	
	public static void loadEverything(haxe.lang.Function callback)
	{
		//line 59 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		int fileCount = 0;
		//line 60 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 60 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g = 0;
			//line 60 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g1 = haxe.root.Type.getInstanceFields(kha._Assets.BlobList.class);
			//line 60 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g < _g1.length ))
			{
				//line 60 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String blob = _g1.__get(_g);
				//line 60 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g;
				//line 61 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (blob.endsWith("Load")) 
				{
					//line 62 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					fileCount += 1;
				}
				
			}
			
		}
		
		//line 65 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 65 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g2 = 0;
			//line 65 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g11 = haxe.root.Type.getInstanceFields(kha._Assets.ImageList.class);
			//line 65 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g2 < _g11.length ))
			{
				//line 65 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String image = _g11.__get(_g2);
				//line 65 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g2;
				//line 66 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (image.endsWith("Load")) 
				{
					//line 67 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					fileCount += 1;
				}
				
			}
			
		}
		
		//line 70 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 70 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g3 = 0;
			//line 70 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g12 = haxe.root.Type.getInstanceFields(kha._Assets.SoundList.class);
			//line 70 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g3 < _g12.length ))
			{
				//line 70 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String sound = _g12.__get(_g3);
				//line 70 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g3;
				//line 71 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (sound.endsWith("Load")) 
				{
					//line 72 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					fileCount += 1;
				}
				
			}
			
		}
		
		//line 75 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 75 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g4 = 0;
			//line 75 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g13 = haxe.root.Type.getInstanceFields(kha._Assets.FontList.class);
			//line 75 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g4 < _g13.length ))
			{
				//line 75 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String font = _g13.__get(_g4);
				//line 75 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g4;
				//line 76 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (font.endsWith("Load")) 
				{
					//line 77 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					fileCount += 1;
				}
				
			}
			
		}
		
		//line 80 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 80 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g5 = 0;
			//line 80 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g14 = haxe.root.Type.getInstanceFields(kha._Assets.VideoList.class);
			//line 80 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g5 < _g14.length ))
			{
				//line 80 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String video = _g14.__get(_g5);
				//line 80 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g5;
				//line 81 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (video.endsWith("Load")) 
				{
					//line 82 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					fileCount += 1;
				}
				
			}
			
		}
		
		//line 86 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		if (( fileCount == 0 )) 
		{
			//line 87 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			callback.__hx_invoke0_o();
			//line 88 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			return ;
		}
		
		//line 91 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		int[] filesLeft = new int[]{fileCount};
		//line 93 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 93 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g6 = 0;
			//line 93 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g15 = haxe.root.Type.getInstanceFields(kha._Assets.BlobList.class);
			//line 93 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g6 < _g15.length ))
			{
				//line 93 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String blob1 = _g15.__get(_g6);
				//line 93 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g6;
				//line 94 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (blob1.endsWith("Load")) 
				{
					//line 95 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					((haxe.lang.Function) (haxe.root.Reflect.field(kha.Assets.blobs, blob1)) ).__hx_invoke1_o(0.0, new kha.Assets_loadEverything_95__Fun(filesLeft, fileCount, callback));
				}
				
			}
			
		}
		
		//line 102 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 102 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g7 = 0;
			//line 102 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g16 = haxe.root.Type.getInstanceFields(kha._Assets.ImageList.class);
			//line 102 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g7 < _g16.length ))
			{
				//line 102 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String image1 = _g16.__get(_g7);
				//line 102 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g7;
				//line 103 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (image1.endsWith("Load")) 
				{
					//line 104 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					((haxe.lang.Function) (haxe.root.Reflect.field(kha.Assets.images, image1)) ).__hx_invoke1_o(0.0, new kha.Assets_loadEverything_104__Fun(filesLeft, fileCount, callback));
				}
				
			}
			
		}
		
		//line 111 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 111 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g8 = 0;
			//line 111 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g17 = haxe.root.Type.getInstanceFields(kha._Assets.SoundList.class);
			//line 111 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g8 < _g17.length ))
			{
				//line 111 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String sound1 = _g17.__get(_g8);
				//line 111 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g8;
				//line 112 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (sound1.endsWith("Load")) 
				{
					//line 113 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					((haxe.lang.Function) (haxe.root.Reflect.field(kha.Assets.sounds, sound1)) ).__hx_invoke1_o(0.0, new kha.Assets_loadEverything_113__Fun(sound1, filesLeft, fileCount, callback));
				}
				
			}
			
		}
		
		//line 123 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 123 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g9 = 0;
			//line 123 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g18 = haxe.root.Type.getInstanceFields(kha._Assets.FontList.class);
			//line 123 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g9 < _g18.length ))
			{
				//line 123 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String font1 = _g18.__get(_g9);
				//line 123 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g9;
				//line 124 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (font1.endsWith("Load")) 
				{
					//line 125 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					((haxe.lang.Function) (haxe.root.Reflect.field(kha.Assets.fonts, font1)) ).__hx_invoke1_o(0.0, new kha.Assets_loadEverything_125__Fun(filesLeft, fileCount, callback));
				}
				
			}
			
		}
		
		//line 132 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		{
			//line 132 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			int _g10 = 0;
			//line 132 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			haxe.root.Array<java.lang.String> _g19 = haxe.root.Type.getInstanceFields(kha._Assets.VideoList.class);
			//line 132 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
			while (( _g10 < _g19.length ))
			{
				//line 132 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				java.lang.String video1 = _g19.__get(_g10);
				//line 132 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				 ++ _g10;
				//line 133 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
				if (video1.endsWith("Load")) 
				{
					//line 134 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
					((haxe.lang.Function) (haxe.root.Reflect.field(kha.Assets.videos, video1)) ).__hx_invoke1_o(0.0, new kha.Assets_loadEverything_134__Fun(filesLeft, fileCount, callback));
				}
				
			}
			
		}
		
	}
	
	
	public static void loadImage(java.lang.String name, haxe.lang.Function done)
	{
		//line 150 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = haxe.root.Reflect.field(kha.Assets.images, ( name + "Description" ));
		//line 151 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadImageFromDescription(description, new kha.Assets_loadImage_151__Fun(name, done));
	}
	
	
	public static void loadImageFromPath(java.lang.String path, boolean readable, haxe.lang.Function done)
	{
		//line 165 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = new haxe.lang.DynamicObject(new java.lang.String[]{"files", "readable"}, new java.lang.Object[]{new haxe.root.Array<java.lang.String>(new java.lang.String[]{path}), readable}, new java.lang.String[]{}, new double[]{});
		//line 166 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadImageFromDescription(description, done);
	}
	
	
	public static haxe.root.Array<java.lang.String> imageFormats;
	
	public static haxe.root.Array<java.lang.String> get_imageFormats()
	{
		//line 172 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return kha.LoaderImpl.getImageFormats();
	}
	
	
	public static void loadBlob(java.lang.String name, haxe.lang.Function done)
	{
		//line 176 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = haxe.root.Reflect.field(kha.Assets.blobs, ( name + "Description" ));
		//line 177 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadBlobFromDescription(description, new kha.Assets_loadBlob_177__Fun(name, done));
	}
	
	
	public static void loadBlobFromPath(java.lang.String path, haxe.lang.Function done)
	{
		//line 184 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = new haxe.lang.DynamicObject(new java.lang.String[]{"files"}, new java.lang.Object[]{new haxe.root.Array<java.lang.String>(new java.lang.String[]{path})}, new java.lang.String[]{}, new double[]{});
		//line 185 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadBlobFromDescription(description, done);
	}
	
	
	public static void loadSound(java.lang.String name, haxe.lang.Function done)
	{
		//line 189 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = haxe.root.Reflect.field(kha.Assets.sounds, ( name + "Description" ));
		//line 190 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadSoundFromDescription(description, new kha.Assets_loadSound_190__Fun(name, done));
		//line 190 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return ;
	}
	
	
	public static void loadSoundFromPath(java.lang.String path, haxe.lang.Function done)
	{
		//line 197 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = new haxe.lang.DynamicObject(new java.lang.String[]{"files"}, new java.lang.Object[]{new haxe.root.Array<java.lang.String>(new java.lang.String[]{path})}, new java.lang.String[]{}, new double[]{});
		//line 198 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadSoundFromDescription(description, done);
		//line 198 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return ;
	}
	
	
	public static haxe.root.Array<java.lang.String> soundFormats;
	
	public static haxe.root.Array<java.lang.String> get_soundFormats()
	{
		//line 204 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return kha.LoaderImpl.getSoundFormats();
	}
	
	
	public static void loadFont(java.lang.String name, haxe.lang.Function done)
	{
		//line 208 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = haxe.root.Reflect.field(kha.Assets.fonts, ( name + "Description" ));
		//line 209 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadFontFromDescription(description, new kha.Assets_loadFont_209__Fun(name, done));
		//line 209 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return ;
	}
	
	
	public static void loadFontFromPath(java.lang.String path, haxe.lang.Function done)
	{
		//line 216 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = new haxe.lang.DynamicObject(new java.lang.String[]{"files"}, new java.lang.Object[]{new haxe.root.Array<java.lang.String>(new java.lang.String[]{path})}, new java.lang.String[]{}, new double[]{});
		//line 217 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadFontFromDescription(description, done);
		//line 217 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return ;
	}
	
	
	public static haxe.root.Array<java.lang.String> fontFormats;
	
	public static haxe.root.Array<java.lang.String> get_fontFormats()
	{
		//line 223 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return new haxe.root.Array<java.lang.String>(new java.lang.String[]{"ttf"});
	}
	
	
	public static void loadVideo(java.lang.String name, haxe.lang.Function done)
	{
		//line 227 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = haxe.root.Reflect.field(kha.Assets.videos, ( name + "Description" ));
		//line 228 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadVideoFromDescription(description, new kha.Assets_loadVideo_228__Fun(name, done));
		//line 228 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return ;
	}
	
	
	public static void loadVideoFromPath(java.lang.String path, haxe.lang.Function done)
	{
		//line 235 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		java.lang.Object description = new haxe.lang.DynamicObject(new java.lang.String[]{"files"}, new java.lang.Object[]{new haxe.root.Array<java.lang.String>(new java.lang.String[]{path})}, new java.lang.String[]{}, new double[]{});
		//line 236 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		kha.LoaderImpl.loadVideoFromDescription(description, done);
		//line 236 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return ;
	}
	
	
	public static haxe.root.Array<java.lang.String> videoFormats;
	
	public static haxe.root.Array<java.lang.String> get_videoFormats()
	{
		//line 242 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Sources/kha/Assets.hx"
		return kha.LoaderImpl.getVideoFormats();
	}
	
	
}


