// Generated by Haxe 3.4.2
package kha.arrays._Float32Array;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Float32Array_Impl_
{
	static
	{
		//line 8 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.elementSize = 4;
	}
	
	public static int elementSize;
	
	public static java.nio.FloatBuffer _new(int elements)
	{
		//line 10 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		java.nio.FloatBuffer this1 = java.nio.ByteBuffer.allocateDirect(((int) (( elements * 4 )) )).order(((java.nio.ByteOrder) (java.nio.ByteOrder.nativeOrder()) )).asFloatBuffer();
		//line 10 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		return ((java.nio.FloatBuffer) (this1) );
	}
	
	
	
	
	public static int get_length(java.nio.FloatBuffer this1)
	{
		//line 17 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		return this1.remaining();
	}
	
	
	public static double set(java.nio.FloatBuffer this1, int index, double value)
	{
		//line 21 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		this1.put(((int) (index) ), ((float) (value) ));
		//line 22 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		return value;
	}
	
	
	public static double get(java.nio.FloatBuffer this1, int index)
	{
		//line 26 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		return ((double) (this1.get(((int) (index) ))) );
	}
	
	
	public static java.nio.FloatBuffer data(java.nio.FloatBuffer this1)
	{
		//line 30 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		return this1;
	}
	
	
	public static double arrayRead(java.nio.FloatBuffer this1, int index)
	{
		//line 35 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		return ((double) (this1.get(((int) (index) ))) );
	}
	
	
	public static double arrayWrite(java.nio.FloatBuffer this1, int index, double value)
	{
		//line 40 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		this1.put(((int) (index) ), ((float) (value) ));
		//line 41 "/Applications/Kode Studio.app/Contents/Resources/app/extensions/kha/Kha/Backends/Android/kha/arrays/Float32Array.hx"
		return value;
	}
	
	
}


